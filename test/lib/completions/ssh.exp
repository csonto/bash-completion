proc setup {} {
    save_env
    # NOTE: Changing dir to $SRCDIR is necessary because file locations in the
    #       ssh config files (e.g. UserKnownHostsFile) are relative to $SRCDIR.
    assert_bash_exec {cd $SRCDIR/fixtures/ssh}
}


proc teardown {} {
    assert_bash_exec {cd $TESTDIR}
    assert_env_unmodified {
        /BASH_LINENO=/d
        /BASH_SOURCE=/d
        /OLDPWD=/d
    }
}


setup


set test "Tab should complete both commands and hostname"
    # Try completion
set cmd "ssh -F config ls"
send "$cmd\t"
set expected "^$cmd\r\n.*ls.*ls_known_host.*\r\n/@$cmd$"
expect {
    -re $expected  { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    default { unresolved "$test" }
}


sync_after_int


set test "-F without space shouldn't error"
    # Try completion
set cmd "ssh -F"
send "$cmd\t "
set expected "^$cmd $"
expect {
    -re "^${cmd}bash: option requires an argument -- F" { fail "$test" }
    -re "^$cmd\r\n.*\r\n/@" { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    default { unresolved "$test" }
}


sync_after_int


set test "First argument shouldn't complete with commands"
# NOTE: This test assumes there's a command "bash" and no host named "bash"
set cmd "ssh bas"
assert_complete [get_known_hosts "bas"] $cmd $test


sync_after_int


set test "First argument should complete partial hostname"
assert_complete_partial [get_known_hosts] ssh "localhost" $test -ltrim-colon-completions


sync_after_int


set test "-F should complete filename"
assert_complete "-Fspaced\\ \\ conf" "ssh -Fsp" $test


sync_after_int


set test "Tab should complete with possible private keys"
    # Try completion
set cmd "ssh -i  "
send "$cmd\t"
set expected "^$cmd\r\n(ec_key|dsa_key) *ec_key *rsa_key.*\r\n/@$cmd$"
expect {
    -re $expected  { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    default { unresolved "$test" }
}


sync_after_int


set test "should complete identity files"
set dir $::srcdir/fixtures/ssh
set files [split [exec cd ~/.ssh/; fgrep -l  'PRIVATE KEY-----' * ; fgrep -l 'PRIVATE KEY-----' * ] "\n"]
#set files [split [exec bash -c "find $dir ~/.ssh -type f  \
#                              -exec fgrep -q 'PRIVATE KEY-----' {} \\\; \
#                              -printf '%P\\n' "] "\n" ]
assert_bash_exec {cd "$TESTDIR"}
assert_complete_dir $files "ssh -i " $dir $test


sync_after_int


teardown
